// Code generated by MockGen. DO NOT EDIT.
// Source: echo-starter/internal/contracts/auth (interfaces: IAuthArtifacts)

// Package auth is a generated GoMock package.
package auth

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	oauth2 "golang.org/x/oauth2"
)

// MockIAuthArtifacts is a mock of IAuthArtifacts interface.
type MockIAuthArtifacts struct {
	ctrl     *gomock.Controller
	recorder *MockIAuthArtifactsMockRecorder
}

// MockIAuthArtifactsMockRecorder is the mock recorder for MockIAuthArtifacts.
type MockIAuthArtifactsMockRecorder struct {
	mock *MockIAuthArtifacts
}

// NewMockIAuthArtifacts creates a new mock instance.
func NewMockIAuthArtifacts(ctrl *gomock.Controller) *MockIAuthArtifacts {
	mock := &MockIAuthArtifacts{ctrl: ctrl}
	mock.recorder = &MockIAuthArtifactsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIAuthArtifacts) EXPECT() *MockIAuthArtifactsMockRecorder {
	return m.recorder
}

// GetToken mocks base method.
func (m *MockIAuthArtifacts) GetToken() *oauth2.Token {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetToken")
	ret0, _ := ret[0].(*oauth2.Token)
	return ret0
}

// GetToken indicates an expected call of GetToken.
func (mr *MockIAuthArtifactsMockRecorder) GetToken() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetToken", reflect.TypeOf((*MockIAuthArtifacts)(nil).GetToken))
}
